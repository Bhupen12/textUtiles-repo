{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","value","onChange","event","target","rows","backgroundColor","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","filter","element","length","Alert","word","height","alert","role","charAt","slice","msg","App","setMode","setAlert","message","setTimeout","about","body","setInterval","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.de334a69.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n            </li>\r\n            {/* <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"/about\">{props.about}</a>\r\n            </li> */}\r\n            \r\n          </ul>\r\n          {/* <form className=\"d-flex\">\r\n            <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n            <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n          </form> */}\r\n        <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n            <input className=\"form-check-input\" type=\"checkbox\" onClick = {props.toggleMode} id=\"flexSwitchCheckDefault\"/>\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable dark Mode</label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string,\r\n  about: PropTypes.string\r\n}\r\n\r\n","import React , {useState} from 'react'\r\n\r\n\r\nexport default function TextForm(props) {\r\n\r\n    const handleUpClick = () =>{\r\n        // console.log(\"Upper Case was clicked\");\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to uppercase\" , \"success\")\r\n    }\r\n\r\n    const handleLocClick = () =>{\r\n        // console.log(\"Upper Case was clicked\");\r\n        let newText = text.toLowerCase();\r\n        setText(newText)\r\n    }\r\n\r\n    const handleOnChange = (event) =>{\r\n        // console.log(\"On Change\" + text); \r\n        setText(event.target.value)\r\n    }\r\n\r\n    const handleCopy = () =>{\r\n        // console.log(\"On Change\" + text); \r\n        var text = document.getElementById('myBox');\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Copied to clipboard\" , \"success\")\r\n    }\r\n\r\n    const handleExtraSpace = () =>{\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"))\r\n    }\r\n\r\n    const [text, setText] = useState('');\r\n    // setText(\"new Text\");\r\n    return (\r\n        <>\r\n            <div className = \"container\" style = {{color : props.mode==='dark'?'white':'#051c3f'}}>\r\n                <h1 >{props.heading}</h1>\r\n                <div className=\"mb-3\">\r\n                    <textarea className=\"form-control\" value = {text} onChange={handleOnChange} id=\"myBox\" rows=\"8\" style = {{backgroundColor : props.mode==='dark'?'#112e39':'white' , color:props.mode==='dark'?'white':'#051c3f'}}></textarea>\r\n                </div>\r\n\r\n                <button className=\"btn btn-primary mx-2 my-2\" onClick = {handleUpClick}>Convert To UpperCase</button>\r\n                <button className=\"btn btn-primary mx-2 my-2\" onClick = {handleLocClick}>Convert To LowerCase</button>\r\n                <button className=\"btn btn-primary mx-2 my-2\" onClick = {handleCopy}>Copy Text</button>\r\n                <button className=\"btn btn-primary mx-2 my-2\" onClick = {handleExtraSpace}>handleExtraSpace</button>\r\n            </div>\r\n\r\n            <div className=\"container my-3\" style = {{color : props.mode==='dark'?'white':'#051c3f'}}>\r\n                <h1>Your Text Summary</h1>\r\n                <p>{text.split(\" \").filter((element)=>{return element.length!==0}).length} words , {text.length} characters</p>\r\n                <p>{0.008 * text.split(\" \").filter((element)=>{return element.length!==0}).length} minutes read time</p>\r\n                <h2>Preview</h2>\r\n                <p>{text}</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    \r\n    const capitalize = (word)=>{\r\n        return word.charAt(0).toUpperCase() + word.slice(1)\r\n    }   \r\n\r\n    return (\r\n        <div style={{height : \"50px\"}}>\r\n            {props.alert && <div>\r\n                <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                    <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n                    {/* <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button> */}\r\n                </div>\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import './App.css';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react'\nimport Alert from './components/Alert';\n// import { Link } from 'react-router-dom'\n\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   // Link\n// } from \"react-router-dom\";\n\n\n\nfunction App() {\n\n  const [mode, setMode] = useState('light');\n\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message , type)=>{\n    setAlert({\n      msg : message,\n      type : type\n    })\n    setTimeout(() => {\n      setAlert(null)\n    }, 2000);\n  }\n\n  const toggleMode  = ()=>{\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = '#051c3f';\n      showAlert(\"dark mode enabled\" , \"success\")\n      document.title = \"Text Utiles Dark Mode\"\n      setInterval(() => {\n        document.title = \"Text Utiles is amazing\"\n      }, 2000);\n      setInterval(() => {\n        document.title = \"Install TextUtiles Now\"\n      }, 5000);\n    }\n    else{\n      setMode(\"light\");\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"light mode enabled\" , \"success\")\n      document.title = \"text Utiles light Mode\"\n    }\n  }\n\n  return (\n    <>   \n    {/* <Router> */}\n      <Navbar title=\"TextUtiles\" about = \"About Text\" mode={mode} toggleMode = {toggleMode}/>\n      <Alert alert = {alert}/>\n      <div className=\"container my-3\">\n        {/* <Switch> */}\n            {/* <Route exact path=\"/about\">\n              <About mode={mode} />\n            </Route> */}\n            {/* <Route exact path=\"/\"> */}\n              <TextForm showAlert={showAlert} heading = \"Enter the text\" mode={mode}></TextForm>\n            {/* </Route> */}\n        {/* </Switch> */}\n        {/* <About/> */}\n      </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}